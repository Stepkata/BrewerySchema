package Wirowanie
public
	with Devices;
	with DataTypes;
	with CommonElements;
	with Hardware;
	with SEI;
	
	thread ControlWirDevice
		features
			turn_on_dec: in data port DataTypes::SwitchTrigger;
			on: out data port DataTypes::SwitchTrigger;
		properties
		    Dispatch_Protocol => Periodic;
		    Dispatch_Offset => 	2ms;
		    Deadline => 15ms;	
		    Period => 20ms;
		    Compute_Execution_Time => 0ms..2ms;
	end ControlWirDevice;
	
	thread implementation ControlWirDevice.impl
		
	end ControlWirDevice.impl;
	
	thread WirownikControlThread
		features
			start: in data port DataTypes::SwitchTrigger;
	   		curr_time: in data port DataTypes::DateTime;
	   		total_time: in data port DataTypes::DateTime;
	   		parownik_on: out data port DataTypes::SwitchTrigger;
	   		open_i_gate: out data port DataTypes::SwitchTrigger;
			open_o_gate: out data port DataTypes::SwitchTrigger;
			done: out data port DataTypes::SwitchTrigger;
	   	properties
		    Dispatch_Protocol => Periodic;
		    Dispatch_Offset => 	2ms;
		    Deadline => 15ms;	
		    Period => 20ms;
		    Compute_Execution_Time => 0ms..2ms;	
	end WirownikControlThread;
	
	thread implementation WirownikControlThread.impl
		
	end WirownikControlThread.impl;
	
	process WirownikControlProcess
		features
			start: in data port DataTypes::SwitchTrigger;
			curr_time: in data port DataTypes::DateTime;
			input_data: in data port DataTypes::DateTime;
			parownik_control: out data port DataTypes::SwitchTrigger;
			open_i_gate: out data port DataTypes::SwitchTrigger;
			open_o_gate: out data port DataTypes::SwitchTrigger;
			done: out data port DataTypes::SwitchTrigger;
		properties
			SEI::MIPSBudget => 0.8 mips;	
	end WirownikControlProcess;
	
	process implementation WirownikControlProcess.impl
		subcomponents
			control_thread: thread ControlWirDevice.impl;
			decision_thread: thread WirownikControlThread.impl;
			input_gate_c: thread CommonElements::InputGateControl.impl;
			output_gate_c: thread CommonElements::OutputGateControl.impl;
		connections
			start_conn: port start -> decision_thread.start;
			curr_time_conn: port curr_time -> decision_thread.curr_time;
			setup_des_conn: port input_data -> decision_thread.total_time;
			dec_to_con_conn: port decision_thread.parownik_on -> control_thread.turn_on_dec;
			turn_on_conn: port control_thread.on -> parownik_control;
			conn3: port decision_thread.open_i_gate -> input_gate_c.Open;
	        conn4: port decision_thread.open_o_gate -> output_gate_c.Open;
			conn5: port input_gate_c.OpenGate -> open_i_gate;
	        conn6: port output_gate_c.OpenGate -> open_o_gate;	
	        proc_done: port decision_thread.done -> done;
	end WirownikControlProcess.impl;
	
	thread PSystemControlCenterThread
		features
			UserInput: in data port DataTypes::KeyboardInputData;
			RemoteUserInput: in data port DataTypes::KeyboardInputData;
			TotalTime: out data port DataTypes::DateTime;
			DisplayData: out data port DataTypes::SystemAppData;
		properties
		    Dispatch_Protocol => Periodic;
		    Dispatch_Offset => 	2ms;
		    Deadline => 15ms;	
		    Period => 20ms;
		    Compute_Execution_Time => 0ms..2ms;	
	end PSystemControlCenterThread;
	
	thread implementation PSystemControlCenterThread.impl
		
	end PSystemControlCenterThread.impl;
	
	process PSystemControlCenterProcess
		features
			UserInput: in data port DataTypes::KeyboardInputData;
			RemoteUserInput: in data port DataTypes::KeyboardInputData;
			TotalTime: out data port DataTypes::DateTime;
			DisplayData: out data port DataTypes::SystemAppData;
		properties
			SEI::MIPSBudget => 0.8 mips;		
	end PSystemControlCenterProcess;
			
	process implementation PSystemControlCenterProcess.impl
		subcomponents
			process_thread: thread PSystemControlCenterThread.impl;
		connections
			conn1: port UserInput -> process_thread.UserInput;
			conn2: port RemoteUserInput -> process_thread.RemoteUserInput;
			conn5: port process_thread.TotalTime -> TotalTime;
			conn7: port process_thread.DisplayData -> DisplayData;
	end PSystemControlCenterProcess.impl;
	
	system WirowanieSys
		features
			start: in data port DataTypes::SwitchTrigger;
			RemoteUserInput: in data port DataTypes::KeyboardInputData;
			process_done: out data port DataTypes::SwitchTrigger;
		properties
       		SEI::GrossWeight => 0.9kg;
			SEI::MIPSBudget => 0.8 mips;	
			SEI::MIPSCapacity => 2.4 mips;
			SEI::WeightLimit => 20000.0kg;
	end WirowanieSys;
	
	system implementation WirowanieSys.impl
		subcomponents
			start_button: device Devices::StartButtonWithRemoteControl.impl;
			klawiatura: device Devices::Klawiatura.impl;
			wirownik: device Devices::Wirownik.impl;
			wir: device Devices::Wir.impl;
			keyboard_cont_process: process CommonElements::KeyboardControlProcess.impl;
			input_processing_process: process PSystemControlCenterProcess.impl;
			wirownike_control_process: process WirownikControlProcess.impl;
			button_control: process CommonElements::ButtonControlProcess.impl;
			timer: device Devices::Czasomierz.impl;
			timer_control_proc: process CommonElements::TimerControlProcess.impl;
			monitor: device Devices::Monitor.impl;
			monitor_ctrl: process CommonElements::MonitorControlProcess.impl;
			sys_memory: memory Hardware::RAM.Standard;
			Mag_bus: bus Hardware::Marine.Standard;
			cpu: processor Hardware::corei5;
		connections
			keyboard_conn: port klawiatura.KeyInput -> keyboard_cont_process.KeyboardInput;
			keyboard_to_proc_conn: port keyboard_cont_process.KeyboardOutput -> input_processing_process.UserInput;
			remote_input_conn: port RemoteUserInput -> input_processing_process.RemoteUserInput;
			input_to_proc2: port input_processing_process.TotalTime -> wirownike_control_process.input_data;
			start_system: port start -> start_button.RemoteStart;
			button_to_process: port start_button.Start -> button_control.switch_on;
			start_m_proc: port button_control.on -> wirownike_control_process.start;
			proc_to_kadz1: port wirownike_control_process.open_i_gate -> wirownik.OpenInputGate;
			proc_to_kadz2: port wirownike_control_process.open_o_gate -> wirownik.OpenOutputGate;
			proc_to_wd: port wirownike_control_process.parownik_control -> wir.On;
			timer_to_proc: port timer.CurrTime -> timer_control_proc.ReadTime;
			timer_to_wirowanie: port timer_control_proc.CurrTime -> wirownike_control_process.curr_time;
			process_done_conn: port wirownike_control_process.done -> process_done;
			sys_to_mon_ctrl: port input_processing_process.DisplayData -> monitor_ctrl.SystemInput;
			ctral_to_monitor: port monitor_ctrl.DisplayData -> monitor.DisplayData;
			eth1: bus access Mag_bus -> cpu.eth;
	  		BAC5: bus access Mag_Bus <-> sys_memory.BA1;
		properties
			Actual_Connection_Binding => (reference(Mag_bus)) applies to keyboard_conn;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to keyboard_to_proc_conn;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to remote_input_conn;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to input_to_proc2;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to start_system;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to proc_to_kadz1;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to proc_to_kadz2;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to button_to_process;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to start_m_proc;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to proc_to_wd;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to process_done_conn;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to sys_to_mon_ctrl;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to ctral_to_monitor;
	
			Actual_Memory_Binding => (reference(sys_memory)) applies to keyboard_cont_process;
			Actual_Memory_Binding => (reference(sys_memory)) applies to input_processing_process;
			Actual_Memory_Binding => (reference(sys_memory)) applies to wirownike_control_process;
			Actual_Memory_Binding => (reference(sys_memory)) applies to timer_control_proc;
			Actual_Memory_Binding => (reference(sys_memory)) applies to button_control;
			Actual_Memory_Binding => (reference(sys_memory)) applies to monitor_ctrl;
	
			Actual_Processor_Binding => (reference(cpu)) applies to keyboard_cont_process;
			Actual_Processor_Binding => (reference(cpu)) applies to input_processing_process;
			Actual_Processor_Binding => (reference(cpu)) applies to wirownike_control_process;
			Actual_Processor_Binding => (reference(cpu)) applies to timer_control_proc;	
			Actual_Processor_Binding => (reference(cpu)) applies to button_control;
			Actual_Processor_Binding => (reference(cpu)) applies to monitor_ctrl;
		
			
	end WirowanieSys.impl;
end Wirowanie;
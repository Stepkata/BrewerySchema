package Fermentacja
public
	with DataTypes;
	with Devices;
	with Hardware;
	with CommonElements;
	with SEI;
	
	thread FermentacjaDecisionCenter
		features
			Start: in data port DataTypes::SwitchTrigger;
			CurrTime: in data port DataTypes::DateTime;
			DesiredTime: in data port DataTypes::DateTime;
			OpenInputGate: out data port DataTypes::SwitchTrigger;
			OpenOutputGate: out data port DataTypes::SwitchTrigger;	
			Done: out data port DataTypes::SwitchTrigger;		
		properties
		    Dispatch_Protocol => Periodic;
		    Dispatch_Offset => 	2ms;
		    Deadline => 15ms;	
		    Period => 20ms;
		    Compute_Execution_Time => 0ms..2ms;	
	end FermentacjaDecisionCenter;
	
	thread implementation FermentacjaDecisionCenter.impl
		
	end FermentacjaDecisionCenter.impl;
	
	process FermentacjaProcess
		features
			Start: in data port DataTypes::SwitchTrigger;
			TotalTime: in data port DataTypes::DateTime;
			CurrTime: in data port DataTypes::DateTime;
			IGateOpen: out data port DataTypes::SwitchTrigger;
			OGateOpen: out data port DataTypes::SwitchTrigger;
			TurnOn: out data port DataTypes::SwitchTrigger;
			ProcessDone: out data port DataTypes::SwitchTrigger;	
		properties
			SEI::MIPSBudget => 0.8 mips;	
	end FermentacjaProcess;
	
	process implementation FermentacjaProcess.impl
		subcomponents
			input_gate_c: thread CommonElements::InputGateControl.impl;
			output_gate_c: thread CommonElements::OutputGateControl.impl;
			fermentacja_decision_center: thread FermentacjaDecisionCenter.impl;
		connections
			start_conn: port Start -> fermentacja_decision_center.Start;
			desired_time_conn: port TotalTime -> fermentacja_decision_center.DesiredTime;
			curr_time_conn: port CurrTime -> fermentacja_decision_center.CurrTime;
			open_igate_dec_conn: port fermentacja_decision_center.OpenInputGate -> input_gate_c.Open;
			open_ogate_dec_conn: port fermentacja_decision_center.OpenOutputGate -> output_gate_c.Open;
			open_igate_conn: port input_gate_c.OpenGate -> IGateOpen;
			open_ogate_conn: port output_gate_c.OpenGate -> OGateOpen;
			signal_end_proc_conn: port fermentacja_decision_center.Done -> ProcessDone;
	end FermentacjaProcess.impl;
	
	thread FSystemControlCenterThread
		features
			UserInput: in data port DataTypes::KeyboardInputData;
			RemoteUserInput: in data port DataTypes::KeyboardInputData;
			TotalTime: out data port DataTypes::DateTime;
			DisplayData: out data port DataTypes::SystemAppData;
	end FSystemControlCenterThread;
	
	thread implementation FSystemControlCenterThread.impl
		
	end FSystemControlCenterThread.impl;
	
	process FSystemControlCenterProcess
		features
			UserInput: in data port DataTypes::KeyboardInputData;
			RemoteUserInput: in data port DataTypes::KeyboardInputData;
			TotalTime: out data port DataTypes::DateTime;
			DisplayData: out data port DataTypes::SystemAppData;
		properties
			SEI::MIPSBudget => 0.8 mips;	
	end FSystemControlCenterProcess;
			
	process implementation FSystemControlCenterProcess.impl
		subcomponents
			process_thread: thread FSystemControlCenterThread.impl;
		connections
			conn1: port UserInput -> process_thread.UserInput;
			conn0: port RemoteUserInput -> process_thread.RemoteUserInput;
			conn4: port process_thread.TotalTime -> TotalTime;
			conn7: port process_thread.DisplayData -> DisplayData;
	end FSystemControlCenterProcess.impl;
	
	system FermentacjaSystem
		features
			start: in data port DataTypes::SwitchTrigger;
			RemoteUserInput: in data port DataTypes::KeyboardInputData;
			process_done: out data port DataTypes::SwitchTrigger;
		properties
       		SEI::GrossWeight => 0.9kg;
			SEI::MIPSBudget => 0.8 mips;
			SEI::MIPSCapacity => 2.4 mips;
			SEI::WeightLimit => 20000.0kg;	
	end FermentacjaSystem;
	
	system implementation FermentacjaSystem.impl
		subcomponents
			start_button: device Devices::StartButtonWithRemoteControl.impl;
			klawiatura: device Devices::Klawiatura.impl;
			timer: device Devices::Czasomierz.impl;
			keyboard_cont_process: process CommonElements::KeyboardControlProcess.impl;
			input_processing_process: process FSystemControlCenterProcess.impl;
			timer_control_proc: process CommonElements::TimerControlProcess.impl;
			button_control: process CommonElements::ButtonControlProcess.impl;
			zbiornik: device Devices::ZbiornikDoFermentacji.impl;
			fermentacja_control: process FermentacjaProcess.impl;
			monitor: device Devices::Monitor.impl;
			monitor_ctrl: process CommonElements::MonitorControlProcess.impl;
			sys_memory: memory Hardware::RAM.Standard;
			Mag_bus: bus Hardware::Marine.Standard;
			cpu: processor Hardware::corei5;
		connections
			keyboard_conn: port klawiatura.KeyInput -> keyboard_cont_process.KeyboardInput;
			keyboard_to_proc_conn: port keyboard_cont_process.KeyboardOutput -> input_processing_process.UserInput;
			remote_input_conn: port RemoteUserInput -> input_processing_process.RemoteUserInput;
			input_to_proc1: port input_processing_process.TotalTime -> fermentacja_control.TotalTime;
			start_system: port start -> start_button.RemoteStart;
			button_to_process: port start_button.Start -> button_control.switch_on;
			start_fermentacja: port button_control.on -> fermentacja_control.Start;
			timer_to_proc: port timer.CurrTime -> timer_control_proc.ReadTime;
			timer_to_fermentacja: port timer_control_proc.CurrTime -> fermentacja_control.CurrTime;
			all_processes_done: port fermentacja_control.ProcessDone -> process_done;
			sys_to_mon_ctrl: port input_processing_process.DisplayData -> monitor_ctrl.SystemInput;
			ctral_to_monitor: port monitor_ctrl.DisplayData -> monitor.DisplayData;
			eth1: bus access Mag_bus -> cpu.eth;
	  		BAC5: bus access Mag_Bus <-> sys_memory.BA1;
		properties
			Actual_Connection_Binding => (reference(Mag_bus)) applies to keyboard_conn;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to keyboard_to_proc_conn;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to remote_input_conn;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to input_to_proc1;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to start_system;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to button_to_process;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to start_fermentacja;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to timer_to_proc;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to timer_to_fermentacja;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to all_processes_done;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to sys_to_mon_ctrl;
			Actual_Connection_Binding => (reference(Mag_bus)) applies to ctral_to_monitor;
			
			Actual_Memory_Binding => (reference(sys_memory)) applies to monitor_ctrl;
			Actual_Memory_Binding => (reference(sys_memory)) applies to keyboard_cont_process;
			Actual_Memory_Binding => (reference(sys_memory)) applies to input_processing_process;
			Actual_Memory_Binding => (reference(sys_memory)) applies to fermentacja_control;
			Actual_Memory_Binding => (reference(sys_memory)) applies to timer_control_proc;
			Actual_Memory_Binding => (reference(sys_memory)) applies to button_control;
			
	
			Actual_Processor_Binding => (reference(cpu)) applies to keyboard_cont_process;
			Actual_Processor_Binding => (reference(cpu)) applies to input_processing_process;
			Actual_Processor_Binding => (reference(cpu)) applies to fermentacja_control;
			Actual_Processor_Binding => (reference(cpu)) applies to timer_control_proc;
			Actual_Processor_Binding => (reference(cpu)) applies to button_control;
			Actual_Processor_Binding => (reference(cpu)) applies to monitor_ctrl;
	end FermentacjaSystem.impl;
	
end Fermentacja;